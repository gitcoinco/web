# Generated by Django 2.2.4 on 2020-08-08 11:45

from django.db import migrations

def create_grant_type(apps, schema_editor):
    GrantType = apps.get_model('grants', 'GrantType')
    types = ['tech', 'media', 'matic', 'health', 'change']

    for _type in types:
        grant_type = GrantType()
        grant_type.name = _type
        if _type == 'change':
            grant_type.label = 'Crypto for Black Lives'
        elif _type == 'media':
            grant_type.label = 'Community'
        elif _type == 'matic':
            grant_type.label = 'Matic: Build-n-Earn'
        else:
            grant_type.label = _type.capitalize()
        grant_type.save()
        print(f'Succesfully Created Grant Type {_type}')


def create_grant_categories(apps, schema_editor):
    GrantCategory = apps.get_model('grants', 'GrantCategory')
    category_names = [
        'blog',
        'community',
        'COVID19 research',
        'COVID19 response',
        'defi',
        'devEx',
        'education',
        'eth1.x',
        'eth2.0',
        'notes',
        'reddit',
        'scalability',
        'security',
        'twitter',
        'usability',
        'wallets',
    ]
    for category_name in category_names:
        GrantCategory.objects.get_or_create(category=category_name)


def map_grant_type_to_catergories(apps, schema_editor):
    try:
        GrantType = apps.get_model('grants', 'GrantType')
        GrantCategory = apps.get_model('grants', 'GrantCategory')

        for grant_type in GrantType.objects.all():
            if grant_type.name in ['tech', 'matic']:
                categories =  [
                    'security', 'scalability', 'defi', 'education', 'wallets',
                    'community', 'eth2.0', 'eth1.x', 'devEx', 'usability'
                ]

            elif grant_type.name == 'media':
                categories = ['education', 'twitter', 'reddit', 'blog', 'notes']

            elif grant_type.name == 'health':
                categories = ['COVID19 research', 'COVID19 response']

            elif grant_type.name == 'change':
                categories = []

            for category in categories:
                grant_category = GrantCategory.objects.get(category=category)
                grant_type.categories.add(grant_category)

            grant_type.save()
            print(f'Succesfully Associated Grant Type {grant_type} to Grant Categories ')
    except :
        print("issues mapping GrantType to GrantCategory. manually map type to category")
        pass

def migrate_grant_type(apps, schema_editor):
    Grant = apps.get_model('grants', 'Grant')
    GrantType = apps.get_model('grants', 'GrantType')

    for grant in Grant.objects.all():
        grant_type_name = grant.grant_type_purge

        grant_type = GrantType.objects.filter(name=grant_type_name).first()
        grant.grant_type = grant_type
        grant.save()
    print(f'Grant grant_type_purge -> grant_type migrated')



class Migration(migrations.Migration):

    dependencies = [
        ('grants', '0069_auto_20200808_1144'),
    ]

    operations = [
        migrations.RunPython(create_grant_type),
        migrations.RunPython(create_grant_categories),
        migrations.RunPython(map_grant_type_to_catergories),
        migrations.RunPython(migrate_grant_type)
    ]
