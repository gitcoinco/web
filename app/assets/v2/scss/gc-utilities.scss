// import variables and mixins
@import "./gc-mixins";

// .border-top-[1-5]
@include border('top', 1, 5);

// .border-left-[1-5]
@include border('left', 1, 5);

// .border-bottom-[1-5]
@include border('bottom', 1, 5);

// .border-right-[1-5]
@include border('right', 1, 5);

// .border-[dashed]-top-[1]
@include border('top', 1, 1, 'dashed');

// .border-[grey, primary, secondary, danger, info, dark, light, lighter]
@include border-colors(
  'grey' #E2E0E7,
  'grey-200' $gc-grey-200,
  'primary' $blue,
  'secondary' $green,
  'danger' $red,
  'info' $yellow,
  'dark' $dark,
  'light' $light
);

// .border-bottom-md-[0-5]
@media (min-width: 768px) {
  @include border('bottom', 0, 5, 'md');
}

// .line-height-[1-5]
@include line-height(
  1 1.4,
  2 1.6,
  3 1.8,
  4 2.2,
  5 2.5
);

// .line-height-md-[1-5]
@media (min-width: 768px) {
  @include line-height(
    'md-1' 1.4,
    'md-2' 1.6,
    'md-3' 1.8,
    'md-4' 2.2,
    'md-5' 2.5
  );
}

// .line-height-lg-[1-5]
@media (min-width: 992px) {
  @include line-height(
    'lg-1' 1.4,
    'lg-2' 1.6,
    'lg-3' 1.8,
    'lg-4' 2.2,
    'lg-5' 2.5
  );
}

// .line-clamp-[1-5]
@include line-clamp(1, 5);

// .gap-[1-5]
@include gap(1, 5);

// .spacer-[m,mt,mb,ml,mr,p,pt,pb,pl,pr]-[1-8]
@include spacers(
  '0' 0rem,
  '1' 0.25rem,
  '2' 0.5rem,
  '3' 1rem,
  '4' 1.5rem,
  '5' 3rem,
  '6' 6rem,
  '7' 9rem,
  '8' 12rem
);

// lighter grey styling
.bg-lighter {
  background-color: $gc-grey-100;
}

.bg-violet-100 {
  background-color: $gc-violet-100;
}

.bg-violet-300 {
  background-color: $gc-violet-300;
}

.bg-violet-400 {
  background-color: $gc-violet-400;
}

.bg-teal-300 {
  background-color: $gc-teal-300;
}

.bg-pink-300 {
  background-color: $gc-pink-300;
}

.text-lighter {
  color: $gc-grey-100;
}

// hover effects
.hover-underline:not(:disabled):not(.disabled):not(.active):hover {
  text-decoration: underline!important
}

.text-primary-hover:hover {
  color: $gc-violet-500!important;
}

// invalid form state
.invalid {

  input.invalid, input:invalid, .form__checkbox input:invalid + .form__label::before,
  & > .btn-radio:not(.disabled), & > .btn-group-toggle .btn-radio:not(.disabled),
  .quill-editor.invalid .ql-snow, .form__radio input:invalid + label:after,
  .checkbox_container input:invalid + span + .filter-label > label:before  {
    border-color:#D44D6E;
  }

  .vs__selected-options > input:invalid {
    min-height: 21px;
    box-shadow:
      -7px -9px 0px 0px #fff, 30px -9px 0px 0px #fff, 30px 5px 0px 0px #fff, -7px 5px 0px 0px #fff,
      -8px -10px 0px 0px #D44D6E, 31px -10px 0px 0px #D44D6E, 31px 6px 0px 0px #D44D6E, -8px 6px 0px 0px #D44D6E;
    border-radius: 1px;
    border: none;
    z-index: 0;
  }
}

// helpers to fix top and bottom positions
.bottom-0 {
  bottom: 0px;
}

.top-0 {
  top: 0px;
}

// background-image helpers
.bg-img-cover {
  background-repeat: no-repeat;
  background-size: cover;
}

.bg-img-contain {
  background-repeat: no-repeat;
  background-size: contain;
}

// flex rules (columns at break-points)
.flex-basis-auto {
  flex-basis: auto;
}
.flex-basis-25 {
  flex-basis: 25%;
}
.flex-basis-33 {
  flex-basis: 33%;
}
.flex-basis-50 {
  flex-basis: 50%;
}
.flex-basis-100 {
  flex-basis: 100%;
}

@media (min-width: 768px) {
  .flex-basis-md-auto {
    flex-basis: auto;
  }
  .flex-basis-md-25 {
    flex-basis: 25%;
  }
  .flex-basis-md-33 {
    flex-basis: 33%;
  }
  .flex-basis-md-50 {
    flex-basis: 50%;
  }
  .flex-basis-md-100 {
    flex-basis: 100%;
  }
}

@media (min-width: 992px) {
  .flex-basis-lg-auto {
    flex-basis: auto;
  }
  .flex-basis-lg-25 {
    flex-basis: 25%;
  }
  .flex-basis-lg-33 {
    flex-basis: 33%;
  }
  .flex-basis-lg-50 {
    flex-basis: 50%;
  }
  .flex-basis-lg-100 {
    flex-basis: 100%;
  }
}

// media-queries to handle w-*-* (widths at breakpoints)
@media (min-width: 768px) {
  body {
    .w-md-100 {
      width: 100%!important;
    }
    .w-md-50 {
      width: 50%!important;
    }
    .w-md-25 {
      width: 25%!important;
    }
    .w-md-auto {
      width: auto!important;
    }
  }
}

@media (min-width: 992px) {
  body {
    .w-lg-100 {
      width:100%!important;
    }
    .w-lg-50 {
      width: 50%!important;
    }
    .w-lg-25 {
      width: 25%!important;
    }
    .w-lg-auto {
      width: auto!important;
    }
  }
}

// absolute positioning for > md
@media (min-width:768px) {
  .position-md-absolute {
    position: absolute;
  }
}

// svg icon inside outline primary
.btn-outline-primary {
  svg {
    stroke: #6F3FF5;
    transition: stroke 0.15s ease-in-out;
    vertical-align: text-bottom;
  }

  &:hover svg, &:active svg {
    stroke: #FFFFFF;
  }
}

// hr with -- or/and --
div.hr {
  text-align: center;
  margin-top: 1rem;
  margin-bottom: 1rem;
  border: 0;
  border-top: 1px solid rgba(0, 0, 0, 0.1);

  & > .hr-text {
    background: white;
    display: inline;
    position: absolute;
    transform: translate(-50%, -50%);
    padding: 15px;
    z-index: 0;
  }
}

// icon hover effect
.icon-hover {
  color: $gc-grey-300;

  &:hover {
    color: $gc-grey-500
  }
}
